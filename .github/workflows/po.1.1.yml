name: PO.1.1

on:
  schedule:
    - cron: '0 0 1 * *'  # Kjøres månedlig
  push:
    branches:
      - main
      - annSophie-po.1.1
  workflow_dispatch: # Allow manual triggering

jobs:
  generate-report:
    runs-on: ubuntu-latest
    steps:
        # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

        # Step 2: Install the latest version of trivy
      - name: Installing trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.60.0_Linux-64bit.tar.gz
          tar -xzf trivy_0.60.0_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

        # Step 3: Scan the entire project for vulnerabilitiues using trivy
      - name: Scan repository for vulnerabilities (entire project)
        id: trivy
        run: |
         trivy fs --security-checks vuln,config --format json --output trivy-result.json --severity HIGH,CRITICAL --vuln-type os,library --ignore-unfixed ../../

       # Step 4: Ensure the Trivy report exists
      - name: Ensure Trivy report exists
        run:
         if [ ! -f results.sarif ]; then
         touch results.sarif
         fi


        # Step 5: Install and run Checkov
      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          framework: terraform

      # Step 6: Ensure checkov results file exists
      - name: Ensure Checkov results file exists
        run: |
          if [ ! -f results.sarif ]; then
          touch results.sarif
          fi

        # Step 7: Upload results to GitHub Advanced Security
      - name: Upload SARIF file
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          category: checkov

        # Step 8: Save the results as an artifact
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: security-results
          path: |
            trivy-results.json
            results.sarif

        # Step 9: Comment Pull Requests with the results
      - name: Comment on PR
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require('fs');
            const results = fs.readFileSync('results/security-results.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `PO.1.1:\n\n${results}`
            });
