name: PO.1.1

on:
  schedule:
    - cron: '0 0 1 * *'  # Kjøres månedlig
  push:
    branches:
      - main
      - annSophie-po.1.1
  workflow_dispatch: # Allow manual triggering

jobs:
  generate-report:
    runs-on: ubuntu-latest
    steps:
        # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

        # Step 2: Install the latest version of trivy
      - name: Installing trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.60.0_Linux-64bit.tar.gz
          tar -xzf trivy_0.60.0_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

        # Step 3: Scan the entire project for vulnerabilitiues using trivy
      - name: Scan repository for vulnerabilities (entire project)
        id: trivy
        run: |
          trivy fs --security-checks vuln,config --format json --output trivy-results.json --severity HIGH,CRITICAL --vuln-type os,library --ignore-unfixed .

        # Step 4: Run CodeQL analysis
      - name: Run CodeQL analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

        # Step 5: Perform CodeQL analysis
     # - name: Perform CodeQL analysis
     #   uses: github/codeql-action/analyze@v3
     #   with:
     #     output: codeql-builtin-results.json
     #
        # Step 6: Ensure CodeQL results file exists
      #- name: Ensure CodeQL results file exists
      #  run: |
      #    if [ ! -f codeql-results.json ]; then
      #      touch codeql-results.json
      #    fi

        # Step 7: Install and run Checkov
      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          framework: terraform

        # Step 8: Upload results to GitHub Advanced Security
      - name: Upload SARIF file
        if: success() || failure()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: checkov.sarif
          category: checkov

        # Step 9: Ensure checkov results file exists
      - name: Ensure Checkov results file exists
        run: |
          if [ ! -f checkov.sarif ]; then
          touch checkov.sarif
          fi

        # Step 10: Save the results as an artifact
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: security-results
          path: |
            trivy-results.json
             checkov.sarif
          #  codeq-results.json
