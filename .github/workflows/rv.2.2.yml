name: RV.2.2

on:
  push:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 1' # Run every Monday at 00:00
  workflow_dispatch: # Allow manual triggering of the workflow

jobs: 
  security-risk-management:
    name: Security Risk Management
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get the entire Git history
    
      # Step 1: Scan repository for vulnerabilities using Trivy
      - name: Scan repository for vulnerabilities
        id: trivy
        run: |
          # Download Trivy
          wget https://github.com/aquasecurity/trivy/releases/download/v0.60.0/trivy_0.60.0_Linux-64bit.tar.gz
          tar -xzf trivy_0.60.0_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

          # Initialiser og oppdater submoduler
          git submodule update --init --recursive
          
          # Naviger til rotmappen
          cd ../..
          pwd  # Debugging: bekreft at du er i riktig katalog
          ls -la  # Debugging: liste filer i nåværende katalog
          
          # Kjør Trivy skanning og legg til debug-utdata
          trivy fs --security-checks vuln,config --format json --output trivy-report.json --severity HIGH,CRITICAL --vuln-type os,library --ignore-unfixed .
          
          # Bekreft at filen ble opprettet etter Trivy-kjøring
          ls -la  # Debugging: sjekk om trivy-report.json eksisterer
          if [ ! -f trivy-report.json ]; then
            echo "❌ trivy-report.json ble ikke funnet!"
            exit 1
          else
            echo "✅ trivy-report.json funnet!"
          fi

      # Step 2: Rate the severity of the vulnerabilities and prioritize them
      - name: Rate the severity of the vulnerabilities and prioritize them
        id: evaluate-vulnerabilities
        run: | 
          # Bruk den eksisterende trivy-report.json direkte uten å laste den ned
          if [ ! -f trivy-report.json ]; then
            echo "trivy-report.json not found!"
            exit 1
          fi
          echo "Rating and prioritizing vulnerabilities..."
          node evaluate_risk.js trivy-report.json > risk_report.md

      # Step 3: Create a temporary fix
      - name: Create a temporary fix
        id: apply-workarounds
        run: |
          echo "Checking if risk_report.md exists..."
          if [ ! -f risk_report.md ]; then
            echo "risk_report.md not found!"
            exit 1
          fi
          echo "risk_report.md found. Proceeding with temporary fixes..."
          echo "Creating temporary fixes..."
          node implement_workarounds.js risk_report.md
          echo "Temporary fixes applied successfully."

      # Resten av workflowen...
