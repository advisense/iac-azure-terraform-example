name: rv.2.2

on:
  push:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 1'  # Kjør hver mandag kl. 00:00
  workflow_dispatch:  # Tillat manuell kjøring av workflow

jobs:
  security-risk-management:
    name: Security Risk Management for Terraform
    runs-on: ubuntu-latest

    steps:
      # Steg 1: Sjekk ut repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Hent hele Git-historikken
    
      # Steg 2: Installer Trivy
      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.60.0_Linux-64bit.tar.gz
          tar -xzf trivy_0.60.0_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/
      
      # Steg 3: Skann hele prosjektet med Trivy
      - name: Scan repository for vulnerabilities (entire project)
        id: trivy
        run: |
          trivy fs --security-checks vuln,config --format json --output trivy-report.json --severity HIGH,CRITICAL --vuln-type os,library --ignore-unfixed ./
      
      # Steg 4: Skann Terraform-kode med Checkov (moduler i stedet for deployments)
      - name: Scan Terraform with Checkov (don't fail on findings)
        run: |
          pip install checkov  # Installer Checkov
          checkov -d modules/ --framework terraform --soft-fail --output json > checkov-report.json
        continue-on-error: true  # Sikrer at workflowen ikke stopper
      
      # Steg 5: Debug Checkov output
      - name: Debug Checkov output
        run: cat checkov-report.json || echo "Checkov report not found!"

      # Steg 6: Sørg for at Trivy-rapporten finnes
      - name: Ensure Trivy report exists
        run: |
          if [ ! -f trivy-report.json ]; then
            echo "Error: trivy-report.json was not generated!"
            exit 1
          fi

      # Steg 7: Sørg for at JSON-filene eksisterer og inneholder data
      - name: Verify Trivy and Checkov reports exist
        run: |
          if [ ! -s trivy-report.json ]; then
            echo "Error: trivy-report.json is missing or empty!"
            exit 1
          fi
          if [ ! -s checkov-report.json ]; then
            echo "Error: checkov-report.json is missing or empty!"
            exit 1
          fi

      # Steg 8: Debug advisory script
      - name: Debug advisory script
        run: |
          echo "Running advisory script..."
          node generate_advisory.js trivy-report.json checkov-report.json || echo "Advisory script failed!"

      # Steg 9: Sørg for at `generate_advisory.js` får riktige argumenter
      - name: Ensure correct arguments for advisory script
        run: |
          echo "Running advisory script with correct arguments..."
          node generate_advisory.js trivy-report.json checkov-report.json advisory.md

      # Steg 10: Generer en sårbarhetsrapport og oppdater GitHub Issues
      - name: Generate a report of vulnerabilities and update GitHub issues
        id: generate-advisory
        run: |
          echo "Generating advisory report..." && \
          node generate_advisory.js trivy-report.json checkov-report.json advisory.md && \
          echo "Report generated:" && \
          cat advisory.md && \
          gh issue create --title "Security advisory: Critical vulnerabilities discovered" --body "$(cat advisory.md)" --label "security"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Steg 11: Evaluer risiko basert på Trivy-rapport
      - name: Evaluate risk based on Trivy report
        run: |
          echo "Evaluating risk..." && \
          node evaluate_risk.js && \
          echo "Risk report generated:" && \
          cat risk_report.md
      
      # Steg 12: Oppdater dokumentasjon med risikovurderinger
      - name: Update documentation with risk assessment
        run: |
          echo "Updating documentation..."
          node update_documentation.js trivy-report.json advisory.md

      # Steg 13: Lagre sikkerhetsrapport som en artifakt
      - name: Save the report as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: security-risk-report
          path: |
            trivy-report.json
            checkov-report.json
            risk_report.md
